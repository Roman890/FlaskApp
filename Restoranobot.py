from Templates import Templates_Restoranobot
from config import api_id, api_hash
from telethon import TelegramClient
import time
from datetime import date
import asyncio

def check_RestoranoBotStart(channel_username):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ start –¥–ª—è @Restoranobot"""
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    with TelegramClient('sessions/session6', api_id, api_hash, loop=loop) as client:
        client.loop.run_until_complete(client.send_message(channel_username, '/start'))
        time.sleep(20)
        msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=3))
        if msgs[0].to_dict()['message'] != Templates_Restoranobot.answer_3():
            return "Error in >–ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å?.."
        if msgs[1].to_dict()['message'] != Templates_Restoranobot.answer_2():
            return "Error in >–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —á–∞—Ç-–±–æ—Ç..."
        if msgs[2].to_dict()['message'] != Templates_Restoranobot.answer_1():
            return "Error in >–§–æ—Ç–æ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞."
        return "Completed successfully"


def check_RestoranoBotContacts(channel_username):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ üì± –ö–æ–Ω—Ç–∞–∫—Ç—ã üì± –¥–ª—è @Restoranobot"""
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    with TelegramClient('sessions/session6', api_id, api_hash, loop=loop) as client:
        client.loop.run_until_complete(client.send_message(channel_username, 'üì± –ö–æ–Ω—Ç–∞–∫—Ç—ã üì±'))
        time.sleep(20)
        msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=3))
        if msgs[0].to_dict()['message'] != Templates_Restoranobot.answer_for_contacts()[0]:
            return "Error in >–ë—É–¥–µ–º –∂–¥–∞—Ç—å –í–∞—Å.."
        if msgs[1].to_dict()['message'] != Templates_Restoranobot.answer_for_contacts()[1]:
            return "Error in >–ù–∞—à –∞–¥—Ä–µ—Å..."
        if msgs[2].to_dict()['message'] != Templates_Restoranobot.answer_for_contacts()[2]:
            return "Error in >–§–æ—Ç–æ –∞–¥—Ä–µ—Å–∞..."
        return "Completed successfully"


def check_RestoranoBotElectronicCard(channel_username):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ üí≥ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞ üí≥ –¥–ª—è @Restoranobot"""
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    with TelegramClient('sessions/session6', api_id, api_hash, loop=loop) as client:
        client.loop.run_until_complete(client.send_message(channel_username, 'üí≥ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞ üí≥'))
        time.sleep(20)
        msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=2))
        if msgs[0].to_dict()['message'] != Templates_Restoranobot.answer_for_electronic_card()[0]:
            return "Error in >QR-–∫–æ–¥..."
        if msgs[1].to_dict()['message'] != Templates_Restoranobot.answer_for_electronic_card()[1]:
            return "Error in >–ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç QR-–∫–æ–¥..."
        return "Completed successfully"


def check_RestoranoBotMenu(channel_username):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ ü•£ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ú–µ–Ω—é üçπ –¥–ª—è @Restoranobot"""
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    with TelegramClient('sessions/session6', api_id, api_hash, loop=loop) as client:
        client.loop.run_until_complete(client.send_message(channel_username, 'ü•£ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ú–µ–Ω—é üçπ'))
        time.sleep(20)
        msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=2))
        if msgs[0].to_dict()['message'] != Templates_Restoranobot.answer_for_menu_step1()[0]:
            return "Error in >–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?.."
        if msgs[1].to_dict()['message'] != Templates_Restoranobot.answer_for_menu_step1()[1]:
            return "Error in >(–û–±–ª–æ–∂–∫–∞ –º–µ–Ω—é)..."
        client.loop.run_until_complete(client.send_message(channel_username, 'ü•£ –ú—è—Å–Ω—ã–µ –±–ª—é–¥–∞ üçõ'))
        time.sleep(20)
        msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=1))
        if msgs[0].to_dict()['message'] != Templates_Restoranobot.answer_for_menu_step1()[1]:
            return "Error in >(–ú—è—Å–Ω–æ–µ –º–µ–Ω—é)..."
        client.loop.run_until_complete(client.send_message(channel_username, 'üí´ –î—Ä—É–≥–æ–π —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é üí´'))
        time.sleep(20)
        client.loop.run_until_complete(client.send_message(channel_username, 'üç∏ –°—É—à–∏ –∏ —Ä–æ–ª–ª—ã üçπ'))
        time.sleep(20)
        msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=1))
        if msgs[0].to_dict()['message'] != Templates_Restoranobot.answer_for_menu_step1()[1]:
            return "Error in >(–°—É—à–∏ –∏ —Ä–æ–ª—ã –º–µ–Ω—é)..."
        client.loop.run_until_complete(client.send_message(channel_username, 'üí´ –î—Ä—É–≥–æ–π —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é üí´'))
        time.sleep(20)
        client.loop.run_until_complete(client.send_message(channel_username, 'üç∑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ ü•Ç'))
        time.sleep(20)
        msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=1))
        if msgs[0].to_dict()['message'] != Templates_Restoranobot.answer_for_menu_step1()[1]:
            return "Error in >(–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ–Ω—é)..."
        return "Completed successfully"



def check_RestoranoBotFotos(channel_username):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ üì∏ –§–æ—Ç–æ–≥–∞–ª–µ—Ä–µ—è üì∏ –¥–ª—è @Restoranobot"""
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    with TelegramClient('sessions/session6', api_id, api_hash, loop=loop) as client:
        client.loop.run_until_complete(client.send_message(channel_username, 'üì∏ –§–æ—Ç–æ–≥–∞–ª–µ—Ä–µ—è üì∏'))
        time.sleep(20)
        msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=2))
        if msgs[0].to_dict()['message'] != Templates_Restoranobot.answer_for_fotos()[0]:
            return "Error in >–•–æ—Ç–∏–º –ø–æ–¥–µ–ª–∏—Ç—å—Å—è..."
        if msgs[1].to_dict()['message'] != Templates_Restoranobot.answer_for_fotos()[1]:
            return "Error in >(1-–æ–µ –≤–∏–¥–µ–æ)..."
        client.loop.run_until_complete(client.send_message(channel_username, 'üì∏ –°–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ üì∏'))
        time.sleep(30)
        msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=1))
        if msgs[0].to_dict()['message'] != Templates_Restoranobot.answer_for_fotos()[1]:
            return "Error in >(—Ñ–æ—Ç–æ–≥–∞–ª–µ—Ä–µ—è).."
        return "Completed successfully"


def check_RestoranoBotTableReservations(channel_username):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ ‚ú® –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫ ‚ú® –¥–ª—è @Restoranobot"""
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    with TelegramClient('sessions/session6', api_id, api_hash, loop=loop) as client:
        client.loop.run_until_complete(client.send_message(channel_username, '‚ú® –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫ ‚ú®'))
        time.sleep(15)
        client.loop.run_until_complete(client.send_message(channel_username, '2'))
        time.sleep(15)
        today = date.today()
        client.loop.run_until_complete(client.send_message(channel_username, today.strftime("%d/%m/%Y")))
        time.sleep(15)
        current_time = time.localtime()
        client.loop.run_until_complete(client.send_message(channel_username, time.strftime("%H:%M", current_time)))
        time.sleep(15)
        client.loop.run_until_complete(client.send_message(channel_username, "–ê—Ä—Ç–µ–º"))
        time.sleep(15)
        msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=10))
        if msgs[0].to_dict()['message'] != Templates_Restoranobot.answer_for_table_reservation()[0]:
            return "Error in >–°—Ç–æ–ª–∏–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω."
        if msgs[2].to_dict()['message'] != Templates_Restoranobot.answer_for_table_reservation()[1]:
            return "Error in >–ù–∞ —á—å–µ –∏–º—è –±—É–¥–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ..."
        if msgs[4].to_dict()['message'] != Templates_Restoranobot.answer_for_table_reservation()[2]:
            return "Error in >–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è..."
        if msgs[6].to_dict()['message'] != Templates_Restoranobot.answer_for_table_reservation()[3]:
            return "Error in >–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É..."
        if msgs[8].to_dict()['message'] != Templates_Restoranobot.answer_for_table_reservation()[4]:
            return "Error in >–ù–∞ —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫..."
        return "Completed successfully"


def check_RestoranoBot_return_to_mainMenu(channel_username):
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é @Restoranobot"""
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    with TelegramClient('sessions/session6', api_id, api_hash, loop=loop) as client:
        client.loop.run_until_complete(client.send_message(channel_username, 'üîº –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîº'))


def all_message(channel_username, number):
    """–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–ª–µ–≥—Ä–∞–º"""
    loop = asyncio.new_event_loop()
    with TelegramClient('sessions/session6', api_id, api_hash, loop=loop) as client:
        row_msgs = client.loop.run_until_complete(client.get_messages(channel_username, limit=number))
        msgs = []
        for msg in row_msgs:
            msgs.append(msg.to_dict()['message'])
        return msgs


def run_restoranobot_tests(number, channel_username):
    """–§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –±–æ—Ç–∞ @Restoranobot"""
    number = int(number)
    if number == 601:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
        return check_RestoranoBotStart(channel_username)
    elif number == 602:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        log = check_RestoranoBotContacts(channel_username)
        check_RestoranoBot_return_to_mainMenu(channel_username)
        return log
    elif number == 603:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ–Ω—é
        log = check_RestoranoBotMenu(channel_username)
        check_RestoranoBot_return_to_mainMenu(channel_username)
        return log
    elif number == 604:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã
        log = check_RestoranoBotElectronicCard(channel_username)
        check_RestoranoBot_return_to_mainMenu(channel_username)
        return log
    elif number == 605:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∏–∫–∞
        log = check_RestoranoBotTableReservations(channel_username)
        check_RestoranoBot_return_to_mainMenu(channel_username)
        return log
    elif number == 606:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥–∞–ª–µ—Ä–µ–∏
        log = check_RestoranoBotFotos(channel_username)
        check_RestoranoBot_return_to_mainMenu(channel_username)
        return log
    elif number == 607:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –±–ª—é–¥
        return
    elif number == 608:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∑–æ–≤–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
        return
    elif number == 609:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥—Ä—É–≥—É
        return
    elif number == 610:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–µ–æ—Å–µ–ª—Ñ–∏
        return
    else :
        return
